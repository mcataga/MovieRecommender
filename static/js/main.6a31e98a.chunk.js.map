{"version":3,"sources":["data.js","Form2.js","components/RatingBox.js","Calcs.js","Calcs2.js","NavBar.js","App.js","index.js"],"names":["movieList","ratings","users","Form2","props","handleOnClick","item","setState","position","target","dataset","id","console","log","state","handleCalculations","doCalcs","userInput","simScoreList","i","length","score","findSimilarity","push","simusers","getUsersWithPosScore","toString","predictedRatingForMovie","Map","predictedRating","numandden","calcNumAndDenRecommender","set","mapSorted","entries","sort","a","b","recommendedMovies1","values1","forEach","value","key","recommendedMovies","values","calculate","getUserContentProfile","generateSimMatrix","simMatrix","temp","k","filterRatingsAboveFour","map","resmap","userratings","comedySum","comLen","romanceSum","romLen","dramaSum","dramLen","animationSum","animLen","sportSum","sporLen","movieIndex","num","den","simscorebyuser","simscorelist","res","user1","user2","common","findCommonMovies","profile1","getRatingsForCommonMovies","profile2","average1","getAverageRating","average2","calcNumAndDen","ratings1","ratings2","denopart1","denopart2","Math","pow","sqrt","sum","user","commonMovies","arr1","arr2","result","this","className","filter","Card","style","width","Body","Title","Text","Img","variant","src","process","Dropdown","Toggle","Menu","Item","href","data-id","onClick","Button","as","type","React","Component","RatingBox","handleClick","e","getValue","preventDefault","handleClick2","active","handleClick3","handleClick4","handleClick5","handleClick6","handleClick7","handleClick8","btnActive","backgroundColor","btnNormal","ButtonGroup","name","defaultValue","Calcs","handleValue","data","displayData","testMap","altonFinesse","parseInt","isVisible","average","class","test","Navbar","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","to","Link","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAaA,EAAY,CACrB,iBACA,kBACA,wBACA,8BACA,oBACA,kBACA,wBACA,wBACA,oBACA,4BACA,uBACA,sBACA,iBACA,sBACA,sBACA,kCACA,yBACA,sBACA,oBACA,mBACA,qBACA,sBACA,uBACA,YACA,mBACA,yBACA,eACA,uBACA,eACA,mBACA,wBACA,sBACA,eACA,mBACA,uBAGSC,EAAU,CACnB,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAC/F,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAClF,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAC5F,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GACrjF,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GACnF,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GACrF,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GACxF,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GACtF,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GACvF,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAChF,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAClF,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GACvF,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAChF,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GACvF,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GACtF,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAC3F,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAC9E,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAChF,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAI,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,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","file":"static/js/main.6a31e98a.chunk.js","sourcesContent":["export const movieList = [\n    \"Ant-Man (2015)\",\n    \"Superbad (2007)\",\n    \"21 Jump Street (2012)\",\n    \"Little Miss Sunshine (2006)\",\n    \"Mean Girls (2004)\",\n    \"Deadpool (2016)\",\n    \"Mrs. Doubtfire (1993)\",\n    \"Marriage Story (2019)\",\n    \"La La Land (2016)\",\n    \"500 Days of Summer (2009)\",\n    \"Love Actually (2003)\",\n    \"The Notebook (2004)\",\n    \"Titanic (1997)\",\n    \"Forrest Gump (1994)\",\n    \"The Avengers (2012)\",\n    \"The Shawshank Redemption (1994)\",\n    \"The Dark Knight (2008)\",\n    \"Interstellar (2014)\",\n    \"The Matrix (1999)\",\n    \"Gone Girl (2014)\",\n    \"The Martian (2015)\",\n    \"Finding Nemo (2003)\",\n    \"The Lion King (1994)\",\n    \"Up (2009)\",\n    \"Toy Story (1995)\",\n    \"The Incredibles (2004)\",\n    \"Shrek (2001)\",\n    \"Despicable Me (2010)\",\n    \"Rocky (1976)\",\n    \"Moneyball (2011)\",\n    \"The Blind Side (2009)\",\n    \"Coach Carter (2005)\",\n    \"Creed (2015)\",\n    \"Space Jam (1996)\",\n    \"The Wrestler (2008)\"\n];\n\nexport const ratings = [\n    [3,-1,-1,4,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,3,-1,-1,4,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,5],      //KnightsofNi11\n    [4,4,5,-1,-1,4,-1,-1,4,3,-1,4,2,3,5,-1,4,5,4,-1,-1,3,4,5,4,4,4,5,-1,-1,-1,-1,4,5,-1],                   //Siam\n    [-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,5,-1,5,5,5,-1,5,-1,-1,-1,5,5,5,-1,-1,4,5,-1,5,-1,-1,-1,-1],         //MR_Heraclius\n    [4,-1,5,-1,-1,5,-1,-1,-1,-1,-1,2,3,-1,4,-1,5,5,-1,-1,-1,5,5,5,5,5,4,3,-1,-1,5,5,5,5,-1],                //Mico\n    [-1,5,3,5,3,-1,3,-1,-1,-1,5,5,5,5,4,5,5,-1,4,-1,-1,5,5,5,5,5,5,4,5,5,-1,4,-1,5,5],                      //Roger Ebert\n    [4,2,3,4,2,4,2,4,-1,5,-1,3,-1,-1,5,5,-1,5,4,4,4,4,4,-1,-1,3,3,3,-1,5,5,5,-1,4,-1],                      //Alton\n    [-1,3,-1,-1,-1,4,-1,3,3,-1,-1,-1,3,3,1,3,4,4,4,2,2,1,2,-1,2,2,3,-1,5,4,4,3,-1,-1,3],                    //michaeltrivedi\n    [-1,-1,2,3,2,5,5,3,-1,4,3,-1,-1,1,2,-1,3,-1,4,-1,-1,1,1,2,2,-1,2,-1,5,-1,3,5,-1,4,-1],                  //tomyum43\n    [-1,-1,4,-1,4,-1,5,5,5,5,-1,-1,3,-1,-1,2,-1,3,-1,2,1,-1,-1,4,3,-1,3,2,4,-1,5,-1,5,5,-1],                //snailLover\n    [4,3,-1,5,5,-1,-1,-1,-1,4,-1,-1,-1,-1,2,3,-1,-1,5,5,4,-1,-1,-1,3,1,3,-1,-1,3,2,-1,1,-1,-1],             //exoSuit\n    [-1,3,-1,-1,4,-1,4,2,-1,1,-1,-1,3,-1,2,-1,-1,-1,3,-1,1,5,3,4,-1,5,-1,5,1,-1,2,-1,-1,4,1],               //jsx1220\n    [4,4,-1,3,-1,4,-1,4,3,3,-1,-1,5,-1,-1,-1,2,-1,1,2,-1,-1,-1,1,-1,1,-1,-1,3,-1,4,3,-1,-1,4],              //34Herbert\n    [1,3,-1,-1,4,-1,5,2,-1,2,1,-1,3,-1,-1,-1,3,-1,1,2,2,3,4,4,4,5,-1,5,2,2,-1,3,1,3,1],                     //matLABer\n    [3,-1,1,-1,2,-1,3,3,-1,5,-1,4,4,3,1,1,-1,3,-1,2,2,5,-1,-1,5,3,-1,3,4,-1,4,5,-1,-1,4],                   //HulkRo\n    [3,3,-1,-1,-1,4,5,-1,2,1,1,3,-1,3,-1,-1,-1,-1,-1,2,-1,3,4,-1,2,-1,2,-1,2,-1,-1,3,3,-1,-1],              //egomemo4\n    [5,-1,-1,4,-1,4,3,2,1,3,-1,-1,3,-1,2,-1,3,3,3,2,1,5,-1,4,-1,5,5,3,3,4,4,5,5,-1,-1],                     //edamemes2\n    [1,-1,-1,5,1,-1,1,-1,-1,2,-1,2,5,-1,3,3,5,-1,5,-1,5,2,3,2,-1,2,-1,1,-1,-1,-1,-1,-1,-1,-1],              //airpods555\n    [-1,4,-1,5,-1,5,-1,4,3,4,-1,-1,-1,-1,-1,3,-1,4,3,-1,5,4,4,3,-1,5,-1,5,1,-1,-1,3,2,-1,-1],               //max6345\n    [1,2,-1,-1,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,-1,3,4,4,5,-1,3,4,3],          //trex53\n    [4,4,3,4,5,-1,-1,-1,2,3,2,2,3,-1,-1,2,3,3,2,3,-1,-1,-1,3,5,4,4,3,2,-1,3,1,1,2,3],                       //tornad0\n    [1,2,-1,3,2,-1,2,-1,4,3,4,-1,2,-1,3,-1,-1,5,4,1,-1,2,-1,-1,2,3,-1,3,3,4,5,4,5,4,5],                      //sportlovaMON\n    [4,4,5,4,3,-1,4,  5,4,3,5,4,5,4,  2,-1,3,3,-1,2,-1,  4,3,3,-1,-3,2,-1,  1,-1,2,-1,3,-1,1],                //romComBOy\n    [4,3,5,4,3,3,4,  5,4,3,5,3,5,4,  2,-1,3,3,-1,2,-1,  2,3,3,-1,-3,2,-1,  1,-1,2,-1,3,-1,1]                //romComBOy\n//      COMEDY           ROMANCE       DRAMA/ACTION         ANIMATION             SPORT    \n];\nexport const users = [\n    'KnightsofNi11', 'Siam', 'MR_Heraclius', 'Mico', 'RogerEbert', 'Alton', 'michaeltrivedi', 'tomyum43', 'snailLover', 'exoSuit',\n    'jsx1220', '34Herbert',  'matLAber',' HulkRo',' egomemo4', 'edamemes2', 'airpods555','max6345','trex53','tornad0','sportlovaMON','romComB0y','rommyCommyMan'];","import React from 'react';\nimport './App.css';\nimport {movieList, ratings, users} from './data';\nimport {Dropdown, Button, Card} from \"react-bootstrap\";\n\n\nclass Form2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 0,\n      calculate: false,\n      recommendedMovies: [],\n      values: []\n    }\n    this.movieList = movieList;\n    this.ratings=ratings;\n    this.users=users;\n}\nhandleOnClick = (item) => {\n  this.setState({ \n    position: item.target.dataset.id\n }, () => {\n  console.log(this.state.position);\n  });  \n}\nhandleCalculations = () => {\n   console.log(this.ratings[this.state.position]);\n   this.doCalcs(this.ratings[this.state.position]);\n}\n\n  render() {\n    if (!this.state.calculate) {\n      return (\n          <div className=\"nav-container\">\n            <div className =\"centerFriends\">\n            <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Choose User Dropdown Menu\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {this.users.map((item, i) => (\n                <div key={i}>\n                  <Dropdown.Item href=\"#/action-1\" data-id={i} onClick={(item) => {this.handleOnClick(item)}}>{item}</Dropdown.Item>\n                </div>\n              ))\n              }\n            </Dropdown.Menu>\n            </Dropdown>\n            <Button className=\"calc-button\" as=\"input\" type=\"button\" value=\"Run Calculations\" onClick ={this.handleCalculations} />\n          </div>\n        </div>\n      );\n        }\n     else if (this.state.calculate) {\n        return  (                \n            <>\n            <h1 className=\"centerWee1\">{this.users[this.state.position] + '\\'s Ratings'}</h1>\n            <div className=\"finesse\">\n            { this.ratings[this.state.position].filter(item => item !=-1).map((item, i) => (\n            <Card style={{ width: '18rem' }} key={i}>\n                <Card.Body>\n                    <Card.Title>{this.movieList[i]}</Card.Title>\n                    <Card.Text className=\"mb-2 text-muted\">{this.users[this.state.position] +' rated this movie a ' + item}</Card.Text>\n                </Card.Body>\n            </Card>\n            ))}\n            </div>\n            <h2 className=\"centerWee\">Based on your ratings we'd recommend these movies...</h2>\n            <div className=\"finesse\">\n            {\n            this.state.recommendedMovies.map((item,i) => (\n                <div key={i}>\n                    <div className=\"card-container\">\n            <Card style={{ width: '30rem' }} >\n            <Card.Body>\n            <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(item)+'.jpg'} ></Card.Img>\n                <Card.Title>{movieList[item]}</Card.Title>\n                <Card.Text>\n                Your predicted rating for this movie is {this.state.values[i]}\n                </Card.Text>\n            </Card.Body>\n            </Card>\n            </div>\n                </div>\n                        )) }\n                </div> \n            </>\n            )\n      }\n    }\n    doCalcs = (userInput) => {\n      let simScoreList = [];\n      \n  \n      for (let i = 0; i < ratings.length; i++) {\n          /*let div = document.createElement(\"div\");\n  \n          let heading = document.createElement(\"h2\");\n          heading.appendChild(document.createTextNode(\"Sim(\" + i + \", TestUser)\"));\n          div.appendChild(heading);\n      \n  \n          let scorenode = document.createElement(\"p\");*/\n          let score = this.findSimilarity(ratings[i], userInput);\n          /*let scoretext = document.createTextNode(\"Score = \" + score);\n          scorenode.appendChild(scoretext);\n          div.appendChild(scorenode);\n  \n  \n          document.getElementById(\"main\").appendChild(div);*/\n  \n          simScoreList.push(score);\n          \n          //Do something\n          \n      }\n      \n      let simusers = this.getUsersWithPosScore(simScoreList);\n      console.log(\"Similarity Scores: \" + simScoreList.toString());\n      console.log(\"Users with Sim Scores > 0: \" + simusers.toString());\n      let predictedRatingForMovie = new Map();\n      for (let i = 0; i < userInput.length; i++)  {\n          let predictedRating;\n          if (userInput[i] == -1) {\n              let numandden = this.calcNumAndDenRecommender(simusers,simScoreList,i);\n              predictedRating = ( numandden[0] / numandden[1]);\n              //console.log(\"Numerator = \" + numandden[0]);\n              //console.log(\"Denominator = \" + numandden[1]);\n              predictedRatingForMovie.set(i,predictedRating);\n              //console.log(\"Users Predicted Rating for Movie \" + i + \" is \" + predictedRating);\n          }\n          \n      }\n  \n      let mapSorted = new Map([...predictedRatingForMovie.entries()].sort((a, b) => b[1] - a[1]));\n      let recommendedMovies1 = [];\n      let values1 = [];\n      //mapSorted = filterRatingsAboveFour(mapSorted);\n      mapSorted.forEach( (value, key) => {\n          console.log(\"Predicted Rating for Movie \" + movieList[key] + \" is \" + value);\n          recommendedMovies1.push(key);\n          values1.push(value);\n      });\n      this.setState({ \n          recommendedMovies: [...this.state.recommendedMovies, ...recommendedMovies1],\n          values: [...this.state.values, ...values1]\n       }, () => {\n          this.setState({ \n              calculate: true\n           }, () => {\n               console.log(\"yay concurrency\");\n           })\n        });  \n      \n      //findSimilarity(ratings[0],testuserrating);\n      console.log(\"Content Profile: \" + this.getUserContentProfile(userInput));\n      //document.getElementById(\"btnLoad\").disabled = \"true\";\n      this.generateSimMatrix();\n  }\n  \n  generateSimMatrix = ()  =>   {\n      let simMatrix = [];\n      for (let i = 0; i < ratings.length; i++)    {\n          let temp = [];\n          for (let k = 0; k < ratings.length; k++) {\n              temp.push(this.findSimilarity(ratings[i],ratings[k]));\n          }\n          simMatrix.push(temp);\n      }\n  }\n  \n  filterRatingsAboveFour = (map)  =>   {\n      let resmap = new Map();\n      map.forEach( (value, key) => {\n          if (value >= 4)  {\n              resmap.set(key,value);\n          }\n      });\n      return resmap;\n  }\n  \n  getUserContentProfile = (userratings)  => {\n      let comedySum = 0; let comLen = 0;\n      let romanceSum = 0; let romLen = 0;\n      let dramaSum = 0; let dramLen = 0;\n      let animationSum = 0; let animLen = 0;\n      let sportSum = 0; let sporLen = 0;\n      for (let i = 0; i < 7; i++) { if (userratings[i] != -1) { comedySum += userratings[i]; comLen++; } }\n      for (let i = 7; i < 14; i++) { if (userratings[i] != -1) { romanceSum += userratings[i]; romLen++ } }\n      for (let i = 14; i < 21; i++) { if (userratings[i] != -1) { dramaSum += userratings[i]; dramLen++; } }\n      for (let i = 21; i < 28; i++) { if (userratings[i] != -1) { animationSum += userratings[i]; animLen++; } }\n      for (let i = 28; i < 35; i++) { if (userratings[i] != -1) { sportSum += userratings[i]; sporLen++; } }\n  \n      return [ ((comedySum/comLen)/5), ((romanceSum/romLen)/5), ((dramaSum/dramLen)/5), ((animationSum/animLen)/5), ((sportSum/sporLen)/5)  ];\n  }\n  \n  calcNumAndDenRecommender = (simusers, simScoreList, movieIndex) => {\n      let num = 0;\n      let den = 0;\n      for (let i = 0; i < simusers.length; i++)   {\n          if (ratings[simusers[i]][movieIndex] != -1)   {\n              let simscorebyuser = simScoreList[simusers[i]];\n              num += ( simscorebyuser * ratings[simusers[i]][movieIndex] );\n              den += simscorebyuser;\n          }\n      }\n      let res = [num,den];\n      return res;\n  }\n  \n  getUsersWithPosScore = (simscorelist) => {\n      let res = [];   \n      for (let i = 0; i < simscorelist.length; i++)   {\n          if (simscorelist[i] > 0)    {\n              res.push(i);\n          }\n      }\n      return res;     //list of indexes (users) with positive similarity scores\n  }\n  \n  \n  findSimilarity = (user1,user2) =>  {\n      let common = this.findCommonMovies(user1, user2);                //array of indexes of common movies rated\n      let profile1 = this.getRatingsForCommonMovies(user1, common);    //array of ratings for user1\n      let profile2 = this.getRatingsForCommonMovies(user2, common);    //array of ratings for user2\n      let average1 = this.getAverageRating(profile1);\n      let average2 = this.getAverageRating(profile2);\n      let numandden = this.calcNumAndDen(profile1,profile2,average1,average2);\n      let sim;\n      if (numandden[0] == 0 || numandden[1] == 0) { sim = 0; }\n      else    { sim = numandden[0]/numandden[1]; } \n      //console.log(\"Num = \" + numandden[0] + \"    Den = \" + numandden[1] + \"    Profile1 = \" + profile1.toString() + \"    Profile2 = \" + profile2.toString());\n      /*STEPS:\n      -find common rated movies between user and user profiles in db\n      -get ratings for these movies from both users\n      -get average user rating on these common movies\n      -do calcs for NUM and DEN and find similarity score\n      \n      console.log(\"Common Movies: \" + common.toString());\n      console.log(\"Ratings for User 1: \" + profile1.toString());\n      console.log(\"Ratings for User 2: \" + profile2.toString());\n      console.log(\"Average Rating for User 1: \" + average1);\n      console.log(\"Average Rating for User 2: \" + average2);\n      console.log(\"Numerator: \" + numandden[0]);\n      console.log(\"Denominator: \" + numandden[1]);\n      console.log(\"Similarity Score: \" + sim);\n      */\n      return sim;\n  }\n  \n  \n  calcNumAndDen = (ratings1, ratings2, average1, average2) =>   {\n      let num = 0;\n      let denopart1 = 0;\n      let denopart2 = 0;\n      for (let i = 0; i < ratings1.length; i++)   {\n          num += ( (ratings1[i]-average1) * (ratings2[i]-average2) );\n          denopart1 += Math.pow((ratings1[i]-average1), 2);\n          denopart2 += Math.pow((ratings2[i]-average2), 2);\n      }\n      let den = Math.sqrt(denopart1*denopart2);\n      let res = [num,den];\n      return res;\n  }\n  \n  getAverageRating = (ratings) => {\n      let sum = 0;\n      for (let i = 0; i < ratings.length; i++)    {\n          sum += ratings[i];\n      }\n      return (sum/ratings.length);\n  }\n  \n  getRatingsForCommonMovies = (user, commonMovies) => {\n      let ratings = [];\n      for (let i = 0; i < commonMovies.length; i++)   {\n          ratings.push(user[commonMovies[i]]);\n      }\n      return ratings;\n  }\n  \n  findCommonMovies = (arr1, arr2) =>{\n      let result = [];\n      for (let i = 0; i < arr1.length; i++)   {\n          if (arr1[i] != -1 && arr2[i] != -1) {\n              result.push(i);\n          }\n      }\n      return result;\n  }\n  }\n  \nexport {Form2};\n","import React from 'react';\nimport {Button, ButtonGroup} from \"react-bootstrap\";\n\nclass RatingBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: null\n        }\n}\n\n     handleClick=(e)=>{\n        this.props.getValue(e.target.value);\n        e.preventDefault();\n      }\n    handleClick2=(e)=>{\n        this.setState({ active: 1 });\n        e.preventDefault();\n    }\n    handleClick3=(e)=>{\n        this.setState({ active: 2 });\n        e.preventDefault();\n    }\n    handleClick4=(e)=>{\n        this.setState({ active: 3 });\n        e.preventDefault();\n    }\n    handleClick5=(e)=>{\n        this.setState({ active: 4 });\n        e.preventDefault();\n    }\n    handleClick6=(e)=>{\n        this.setState({ active: 5 });\n        e.preventDefault();\n    }\n    handleClick7=(e)=>{\n        this.setState({ active: 6 });\n        e.preventDefault();\n    }\n    handleClick8=(e)=>{\n        this.setState({ active: 7 });\n        e.preventDefault();\n    }\n\n      render() {\n\n        const btnActive = {\n            backgroundColor: \"deeppink\"\n          };\n          \n        const  btnNormal = {\n            backgroundColor: \"#007bff\"\n          };\n\n    return (\n        <div className= \"rating-container\">\n            <div className = \"Body\">\n                <div className=\"rating-field\">\n                    <ButtonGroup type=\"radio\" name=\"options\" defaultValue={1} onClick={this.handleClick}>\n                    <Button value={-1} onClick={this.handleClick2} style={this.state.active === 1 ? btnActive : btnNormal}>Haven't Watched</Button>\n                    <Button value={0} onClick={this.handleClick3} style={this.state.active === 2 ? btnActive : btnNormal}>0</Button>\n                    <Button value={1} onClick={this.handleClick4} style={this.state.active === 3 ? btnActive : btnNormal}>1</Button>\n                    <Button value={2} onClick={this.handleClick5} style={this.state.active === 4 ? btnActive : btnNormal}>2</Button>\n                    <Button value={3} onClick={this.handleClick6} style={this.state.active === 5 ? btnActive : btnNormal}>3</Button>\n                    <Button value={4} onClick={this.handleClick7} style={this.state.active === 6 ? btnActive : btnNormal}>4</Button>\n                    <Button value={5} onClick={this.handleClick8} style={this.state.active === 7 ? btnActive : btnNormal}>5</Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default RatingBox;","import React from 'react';\nimport RatingBox from './components/RatingBox';\nimport {movieList, ratings} from './data';\nimport {Card, Button} from \"react-bootstrap\";\nimport { Calcs2 } from './Calcs2';\n\nclass Calcs extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n        position: [],\n        data: [],\n        recommendedMovies : [],\n        values: [],\n        isVisible: true\n\n    }\n    this.movieList = movieList;\n    this.ratings=ratings;\n}\n    handleValue= (e, i) => {\n        this.setState(state => {\n            const position = [...state.position, i];\n            const data = [...state.data, e];\n            return {\n              position, \n              data,\n            };\n          });\n        console.log(this.state);\n        console.log(e + \" \" + i  )\n    }\n    test(item, i) {  \n        if ((i> -1 && i < 3) ||(i> 6 && i < 10)||(i> 13 && i < 17)||(i> 20 && i < 24)||(i> 27 && i < 31)){\n        return  (                \n        <div className=\"card-container\">\n        <Card style={{ width: '30rem' }} >\n            {/* {console.log(item + \" \" + i)}        */}\n        <Card.Body>\n        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(i)+'.jpg'} ></Card.Img>\n            <Card.Title>{item}</Card.Title>\n            <Card.Text>\n            Please rate the movie from the following ratings, 0 being worst and 5 being best.\n            </Card.Text>\n            <RatingBox class=\"rating-box\" getValue={((e) => this.handleValue(e, i))} />\n        </Card.Body>\n        </Card>\n        </div>\n        )\n    }\n}\n\n\ndisplayData = () => {\n    console.log(this.state.data);\n    let testMap = new Map();\n    for (let i = 0; i<this.state.position.length; i++) {\n        console.log(i + \" \" + this.state.position[i] + \" \" + this.state.data[i]);\n        testMap[this.state.position[i]] = this.state.data[i];\n    }\n    for (let i = 0; i<35; i++) {\n        if (testMap[i] == null) {\n            testMap[i] = -1;\n        }\n    }\n    let altonFinesse = [];\n\n    for (let i = 0; i <35; i++) {\n        altonFinesse.push(parseInt(testMap[i]));\n        \n    }\n    console.log(altonFinesse);\n    console.log(testMap.toString() + 'THIS TEST MAP');\n    this.doCalcs(altonFinesse);\n    \n}\ndoCalcs = (userInput) => {\n    let simScoreList = [];\n    \n\n    for (let i = 0; i < ratings.length; i++) {\n        /*let div = document.createElement(\"div\");\n\n        let heading = document.createElement(\"h2\");\n        heading.appendChild(document.createTextNode(\"Sim(\" + i + \", TestUser)\"));\n        div.appendChild(heading);\n    \n\n        let scorenode = document.createElement(\"p\");*/\n        let score = this.findSimilarity(ratings[i], userInput);\n        /*let scoretext = document.createTextNode(\"Score = \" + score);\n        scorenode.appendChild(scoretext);\n        div.appendChild(scorenode);\n\n\n        document.getElementById(\"main\").appendChild(div);*/\n\n        simScoreList.push(score);\n        \n        //Do something\n        \n    }\n    \n    let simusers = this.getUsersWithPosScore(simScoreList);\n    console.log(\"Similarity Scores: \" + simScoreList.toString());\n    console.log(\"Users with Sim Scores > 0: \" + simusers.toString());\n    let predictedRatingForMovie = new Map();\n    for (let i = 0; i < userInput.length; i++)  {\n        let predictedRating;\n        if (userInput[i] == -1) {\n            let numandden = this.calcNumAndDenRecommender(simusers,simScoreList,i);\n            predictedRating = ( numandden[0] / numandden[1]);\n            //console.log(\"Numerator = \" + numandden[0]);\n            //console.log(\"Denominator = \" + numandden[1]);\n            predictedRatingForMovie.set(i,predictedRating);\n            //console.log(\"Users Predicted Rating for Movie \" + i + \" is \" + predictedRating);\n        }\n        \n    }\n\n    let mapSorted = new Map([...predictedRatingForMovie.entries()].sort((a, b) => b[1] - a[1]));\n    let recommendedMovies1 = [];\n    let values1 = [];\n    //mapSorted = filterRatingsAboveFour(mapSorted);\n    mapSorted.forEach( (value, key) => {\n        console.log(\"Predicted Rating for Movie \" + movieList[key] + \" is \" + value);\n        recommendedMovies1.push(key);\n        values1.push(value);\n    });\n    this.setState({ \n        recommendedMovies: [...this.state.recommendedMovies, ...recommendedMovies1],\n        values: [...this.state.values, ...values1]\n     }, () => {\n        this.setState({ \n            isVisible: false\n         }, () => {\n             console.log(\"yay concurrency\");\n         })\n      });  \n    \n    //findSimilarity(ratings[0],testuserrating);\n    console.log(\"Content Profile: \" + this.getUserContentProfile(userInput));\n    //document.getElementById(\"btnLoad\").disabled = \"true\";\n    this.generateSimMatrix();\n}\n\ngenerateSimMatrix = ()  =>   {\n    let simMatrix = [];\n    for (let i = 0; i < ratings.length; i++)    {\n        let temp = [];\n        for (let k = 0; k < ratings.length; k++) {\n            temp.push(this.findSimilarity(ratings[i],ratings[k]));\n        }\n        simMatrix.push(temp);\n    }\n}\n\nfilterRatingsAboveFour = (map)  =>   {\n    let resmap = new Map();\n    map.forEach( (value, key) => {\n        if (value >= 4)  {\n            resmap.set(key,value);\n        }\n    });\n    return resmap;\n}\n\ngetUserContentProfile = (userratings)  => {\n    let comedySum = 0; let comLen = 0;\n    let romanceSum = 0; let romLen = 0;\n    let dramaSum = 0; let dramLen = 0;\n    let animationSum = 0; let animLen = 0;\n    let sportSum = 0; let sporLen = 0;\n    for (let i = 0; i < 7; i++) { if (userratings[i] != -1) { comedySum += userratings[i]; comLen++; } }\n    for (let i = 7; i < 14; i++) { if (userratings[i] != -1) { romanceSum += userratings[i]; romLen++ } }\n    for (let i = 14; i < 21; i++) { if (userratings[i] != -1) { dramaSum += userratings[i]; dramLen++; } }\n    for (let i = 21; i < 28; i++) { if (userratings[i] != -1) { animationSum += userratings[i]; animLen++; } }\n    for (let i = 28; i < 35; i++) { if (userratings[i] != -1) { sportSum += userratings[i]; sporLen++; } }\n\n    return [ ((comedySum/comLen)/5), ((romanceSum/romLen)/5), ((dramaSum/dramLen)/5), ((animationSum/animLen)/5), ((sportSum/sporLen)/5)  ];\n}\n\ncalcNumAndDenRecommender = (simusers, simScoreList, movieIndex) => {\n    let num = 0;\n    let den = 0;\n    for (let i = 0; i < simusers.length; i++)   {\n        if (ratings[simusers[i]][movieIndex] != -1)   {\n            let simscorebyuser = simScoreList[simusers[i]];\n            num += ( simscorebyuser * ratings[simusers[i]][movieIndex] );\n            den += simscorebyuser;\n        }\n    }\n    let res = [num,den];\n    return res;\n}\n\ngetUsersWithPosScore = (simscorelist) => {\n    let res = [];   \n    for (let i = 0; i < simscorelist.length; i++)   {\n        if (simscorelist[i] > 0)    {\n            res.push(i);\n        }\n    }\n    return res;     //list of indexes (users) with positive similarity scores\n}\n\n\nfindSimilarity = (user1,user2) =>  {\n    let common = this.findCommonMovies(user1, user2);                //array of indexes of common movies rated\n    let profile1 = this.getRatingsForCommonMovies(user1, common);    //array of ratings for user1\n    let profile2 = this.getRatingsForCommonMovies(user2, common);    //array of ratings for user2\n    let average1 = this.getAverageRating(profile1);\n    let average2 = this.getAverageRating(profile2);\n    let numandden = this.calcNumAndDen(profile1,profile2,average1,average2);\n    let sim;\n    if (numandden[0] == 0 || numandden[1] == 0) { sim = 0; }\n    else    { sim = numandden[0]/numandden[1]; } \n    //console.log(\"Num = \" + numandden[0] + \"    Den = \" + numandden[1] + \"    Profile1 = \" + profile1.toString() + \"    Profile2 = \" + profile2.toString());\n    /*STEPS:\n    -find common rated movies between user and user profiles in db\n    -get ratings for these movies from both users\n    -get average user rating on these common movies\n    -do calcs for NUM and DEN and find similarity score\n    \n    console.log(\"Common Movies: \" + common.toString());\n    console.log(\"Ratings for User 1: \" + profile1.toString());\n    console.log(\"Ratings for User 2: \" + profile2.toString());\n    console.log(\"Average Rating for User 1: \" + average1);\n    console.log(\"Average Rating for User 2: \" + average2);\n    console.log(\"Numerator: \" + numandden[0]);\n    console.log(\"Denominator: \" + numandden[1]);\n    console.log(\"Similarity Score: \" + sim);\n    */\n    return sim;\n}\n\n\ncalcNumAndDen = (ratings1, ratings2, average1, average2) =>   {\n    let num = 0;\n    let denopart1 = 0;\n    let denopart2 = 0;\n    for (let i = 0; i < ratings1.length; i++)   {\n        num += ( (ratings1[i]-average1) * (ratings2[i]-average2) );\n        denopart1 += Math.pow((ratings1[i]-average1), 2);\n        denopart2 += Math.pow((ratings2[i]-average2), 2);\n    }\n    let den = Math.sqrt(denopart1*denopart2);\n    let res = [num,den];\n    return res;\n}\n\ngetAverageRating = (ratings) => {\n    let sum = 0;\n    for (let i = 0; i < ratings.length; i++)    {\n        sum = ratings[i] + sum;\n    }\n    let average = sum/ratings.length;\n    if (average > 6000) { \n        console.log(average);\n        console.log(\"OVCER 6000\");\n        console.log(ratings);\n    }\n    return (average);\n}\n\ngetRatingsForCommonMovies = (user, commonMovies) => {\n    let ratings = [];\n    for (let i = 0; i < commonMovies.length; i++)   {\n        ratings.push(user[commonMovies[i]]);\n    }\n    return ratings;\n}\n\nfindCommonMovies = (arr1, arr2) =>{\n    let result = [];\n    for (let i = 0; i < arr1.length; i++)   {\n        if (arr1[i] != -1 && arr2[i] != -1) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n    render() {\n        if (this.state.isVisible) {\n        return (\n            <>  \n            <div className=\"finesse\">\n            {\n            this.movieList.map((item,i) => (\n                <div key={i}>\n                    {this.test(item,(i))}\n                </div>\n                        )) \n                }\n                </div> \n                <div className=\"YERRRRRR\">\n                <Button variant=\"danger\" className=\"BARERATINGSFAM\" onClick={this.displayData}>SUBMIT RATINGS</Button>\n                </div>\n            </>\n        )\n    }\n    else if (!this.state.isVisible) {\n        console.log(this.state.recommendedMovies);\n        return  (                \n            <>\n            <div className=\"finesse\">\n            {\n            this.state.recommendedMovies.map((item,i) => (\n                <div key={i}>\n                    <div className=\"card-container\">\n            <Card style={{ width: '30rem' }} >\n            <Card.Body>\n            <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(item)+'.jpg'} ></Card.Img>\n                <Card.Title>{movieList[item]}</Card.Title>\n                <Card.Text>\n                Your predicted rating for this movie is {this.state.values[i]}\n                </Card.Text>\n            </Card.Body>\n            </Card>\n            </div>\n                </div>\n                        )) \n                }\n                </div> \n            </>\n            )\n    }\n}\n\n}\nexport {Calcs};","import React from 'react';\nimport {Card} from \"react-bootstrap\";\nimport {movieList, ratings} from './data';\n\nclass Calcs2 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: [],\n            data: [],\n            isVisible: true\n        }\n        this.movieList = movieList;\n        this.ratings=ratings;\n    }\n\nrender() {\n    return (\n        <div className=\"card-container\">\n        <Card style={{ width: '30rem' }} >\n        <Card.Body>\n        {/* <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/'+(i)+'.jpg'} ></Card.Img> */}\n            <Card.Title>Title</Card.Title>\n            <Card.Text>\n            Please rate the movie from the following ratings, 0 being worst and 5 being best.\n            </Card.Text>\n        </Card.Body>\n        </Card>\n        </div>\n    );\n    }\n}\n\nexport {Calcs2}","import React from 'react';\nimport './NavBar';\nimport {Navbar, Nav} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nfunction Body(){\n    return (\n        <div className = \"Body\">\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">MovieRecommender</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            <Link to=\"/newCalc\">\n                <Nav.Link href=\"/newCalc\">New User Calculation</Nav.Link>\n            </Link>\n                <Link to=\"/existingCalc\">\n                    <Nav.Link href=\"/existingCalc\">Existing User Calculation</Nav.Link>\n                </Link>\n            </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Body;","import React from 'react';\nimport './App.css';\nimport {Form2} from './Form2';\nimport {Calcs} from './Calcs';\nimport Navbar from './NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n        <>\n        <Router>\n        <Navbar />\n        <header className=\"parent-app-header\">\n          <h1 className=\"app-header\">Recommender User Interface</h1>\n        </header>\n        <Switch>\n          <Route path='/' exact component={Calcs} />\n          <Route exact path='/newCalc' component={Calcs} />\n          <Route path='/existingCalc' component={Form2} />\n        </Switch>\n      </Router>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}